{"ast":null,"code":"var _jsxFileName = \"/Users/nathanguy/Desktop/highlandsInterview/V9/productManager/app/javascript/components/ProductForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { if (i % 2) { var source = arguments[i] != null ? arguments[i] : {}; ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i])); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(arguments[i], key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDate, isEmptyObject, validateProduct } from '../helpers/helpers';\nimport Pikaday from 'pikaday';\nimport 'pikaday/css/pikaday.css';\nimport { Link } from 'react-router-dom';\n\nvar ProductForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductForm, _React$Component);\n\n  function ProductForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProductForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductForm).call(this, props));\n    _this.state = {\n      product: props.product,\n      errors: {}\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.dateInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(ProductForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      new Pikaday({\n        field: this.dateInput.current,\n        toString: function toString(date) {\n          return formatDate(date);\n        },\n        onSelect: function onSelect(date) {\n          var formattedDate = formatDate(date);\n          _this2.dateInput.current.value = formattedDate;\n\n          _this2.updateProduct('available_date', formattedDate);\n        }\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var product = _ref.product;\n      this.setState({\n        product: product\n      });\n    }\n  }, {\n    key: \"updateProduct\",\n    value: function updateProduct(key, value) {\n      this.setState(function (prevState) {\n        return {\n          product: _objectSpread({}, prevState.product, _defineProperty({}, key, value))\n        };\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var product = this.state.product;\n      var errors = validateProduct(product);\n\n      if (!isEmptyObject(errors)) {\n        this.setState({\n          errors: errors\n        });\n      } else {\n        var onSubmit = this.props.onSubmit;\n        onSubmit(event);\n      }\n    }\n  }, {\n    key: \"validateProduct\",\n    value: function validateProduct(product) {\n      var errors = {};\n\n      if (product.product_name === '') {\n        errors.product_name = 'You must enter a product name';\n      }\n\n      if (product.available_date === '') {\n        errors.available_date = 'You must enter a valid date';\n      }\n\n      if (product.product_upc === '') {\n        errors.title = 'You must enter a upc';\n      }\n\n      if (product.property_name === '') {\n        errors.property_name = 'You must enter a property name';\n      }\n\n      if (product.property_value === '') {\n        errors.property_value = 'You must enter a property value';\n      }\n\n      console.log(product);\n      return errors;\n    }\n  }, {\n    key: \"isEmptyObject\",\n    value: function isEmptyObject(obj) {\n      return Object.keys(obj).length === 0;\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(product) {\n      var target = product.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      this.updateProduct(name, value);\n    }\n  }, {\n    key: \"renderErrors\",\n    value: function renderErrors() {\n      var errors = this.state.errors;\n\n      if (isEmptyObject(errors)) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"The following errors prohibited the product from being saved:\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, Object.values(errors).map(function (error) {\n        return React.createElement(\"li\", {\n          key: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, error);\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var product = this.state.product;\n      var cancelURL = product.id ? \"/products/\".concat(product.id) : '/products';\n      var title = product.id ? \"\".concat(product.available_date, \" - \").concat(product.product_name) : 'New Product';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, title, \"t\"), this.renderErrors(), React.createElement(\"form\", {\n        className: \"productForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"product_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"product_name\",\n        name: \"product_name\",\n        onChange: this.handleInputChange,\n        value: product.product_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"available_date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Date:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"available_date\",\n        name: \"available_date\",\n        ref: this.dateInput,\n        autoComplete: \"off\",\n        value: product.available_date,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"product_upc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"UPC:\"), React.createElement(\"textarea\", {\n        cols: \"30\",\n        rows: \"10\",\n        id: \"product_upc\",\n        name: \"product_upc\",\n        onChange: this.handleInputChange,\n        value: product.product_upc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"property_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Property Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"property_name\",\n        name: \"property_name\",\n        onChange: this.handleInputChange,\n        value: product.property_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"property_value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Property Value:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"property_value\",\n        name: \"property_value\",\n        onChange: this.handleInputChange,\n        value: product.property_value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: cancelURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return ProductForm;\n}(React.Component);\n\nProductForm.propTypes = {\n  product: PropTypes.shape()\n};\nProductForm.defaultProps = {\n  product: {\n    product_name: '',\n    available_date: '',\n    product_upc: '',\n    property_name: '',\n    property_value: ''\n  }\n};\nexport default ProductForm;","map":{"version":3,"sources":["/Users/nathanguy/Desktop/highlandsInterview/V9/productManager/app/javascript/components/ProductForm.js"],"names":["React","PropTypes","formatDate","isEmptyObject","validateProduct","Pikaday","Link","ProductForm","props","state","product","errors","handleSubmit","bind","handleInputChange","dateInput","createRef","field","current","toString","date","onSelect","formattedDate","value","updateProduct","setState","key","prevState","e","preventDefault","onSubmit","event","product_name","available_date","product_upc","title","property_name","property_value","console","log","obj","Object","keys","length","target","name","type","checked","values","map","error","cancelURL","id","renderErrors","Component","propTypes","shape","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDate, isEmptyObject, validateProduct } from '../helpers/helpers';\nimport Pikaday from 'pikaday';\nimport 'pikaday/css/pikaday.css';\nimport { Link } from 'react-router-dom';\n\nclass ProductForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        product: props.product,\n        errors: {},\n      };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.dateInput = React.createRef();\n  }\n\n  componentDidMount() {\n    new Pikaday({\n      field: this.dateInput.current,\n      toString: date => formatDate(date),\n      onSelect: (date) => {\n        const formattedDate = formatDate(date);\n        this.dateInput.current.value = formattedDate;\n        this.updateProduct('available_date', formattedDate);\n      },\n    });\n  }\n\n  componentWillReceiveProps({ product }) {\n    this.setState({ product });\n  }\n\n  updateProduct(key, value) {\n    this.setState(prevState => ({\n      product: {\n        ...prevState.product,\n        [key]: value,\n      },\n    }));\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { product } = this.state;\n    const errors = validateProduct(product);\n\n    if (!isEmptyObject(errors)) {\n      this.setState({ errors });\n    } else {\n      const { onSubmit } = this.props;\n      onSubmit(event);\n    }\n  }\n\n  validateProduct(product) {\n    const errors = {};\n\n    if (product.product_name === '') {\n      errors.product_name = 'You must enter a product name';\n    }\n\n    if (product.available_date === '') {\n      errors.available_date = 'You must enter a valid date';\n    }\n\n    if (product.product_upc === '') {\n      errors.title = 'You must enter a upc';\n    }\n\n    if (product.property_name === '') {\n      errors.property_name = 'You must enter a property name';\n    }\n\n    if (product.property_value === '') {\n      errors.property_value = 'You must enter a property value';\n    }\n\n    console.log(product);\n    return errors;\n  }\n\n  isEmptyObject(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  handleInputChange(product) {\n    const { target } = product;\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.updateProduct(name, value);\n  }\n\n  renderErrors() {\n    const { errors } = this.state;\n\n    if (isEmptyObject(errors)) {\n      return null;\n    }\n\n    return (\n      <div className=\"errors\">\n        <h3>The following errors prohibited the product from being saved:</h3>\n        <ul>\n          {Object.values(errors).map(error => (\n            <li key={error}>{error}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    const { product } = this.state;\n    const cancelURL = product.id ? `/products/${product.id}` : '/products';\n    const title = product.id ? `${product.available_date} - ${product.product_name}` : 'New Product';\n\n\n    return (\n      <div>\n        <h2>{title}t</h2>\n\n        {this.renderErrors()}\n\n        <form className=\"productForm\" onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"product_name\">\n              <strong>Name:</strong>\n              <input \n                type=\"text\" \n                id=\"product_name\" \n                name=\"product_name\" \n                onChange={this.handleInputChange}\n                value={product.product_name}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"available_date\">\n                <strong>Date:</strong>\n                <input\n                  type=\"text\"\n                  id=\"available_date\"\n                  name=\"available_date\"\n                  ref={this.dateInput}\n                  autoComplete=\"off\"\n                  value={product.available_date}\n                  onChange={this.handleInputChange}\n                />\n            </label>\n            </div>\n          <div>\n            <label htmlFor=\"product_upc\">\n              <strong>UPC:</strong>\n              <textarea \n                cols=\"30\" \n                rows=\"10\" \n                id=\"product_upc\" \n                name=\"product_upc\" \n                onChange={this.handleInputChange}\n                value={product.product_upc}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"property_name\">\n              <strong>Property Name:</strong>\n              <input \n                type=\"text\" \n                id=\"property_name\" \n                name=\"property_name\" \n                onChange={this.handleInputChange}\n                value={product.property_name}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"property_value\">\n              <strong>Property Value:</strong>\n              <input \n                type=\"text\" \n                id=\"property_value\" \n                name=\"property_value\" \n                onChange={this.handleInputChange}\n                value={product.property_value}\n              />\n            </label>\n          </div>\n          <div className=\"form-actions\">\n            <button type=\"submit\">Save</button>\n            <Link to={cancelURL}>Cancel</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n    product: PropTypes.shape(),\n  };\n\n  ProductForm.defaultProps = {\n    product: {\n      product_name: '',\n      available_date: '',\n      product_upc: '',\n      property_name: '',\n      property_value: '',\n    },\n  };\n\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}